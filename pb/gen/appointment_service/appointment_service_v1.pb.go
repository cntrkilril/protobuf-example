// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: appointment_service_v1.proto

package appointment_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAppointmentByClientIDRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId int64 `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Limit    int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetAppointmentByClientIDRequestV1) Reset() {
	*x = GetAppointmentByClientIDRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppointmentByClientIDRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentByClientIDRequestV1) ProtoMessage() {}

func (x *GetAppointmentByClientIDRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentByClientIDRequestV1.ProtoReflect.Descriptor instead.
func (*GetAppointmentByClientIDRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{0}
}

func (x *GetAppointmentByClientIDRequestV1) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *GetAppointmentByClientIDRequestV1) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAppointmentByClientIDRequestV1) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetAppointmentByClientIDResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count        int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Appointments []*AppointmentEntityV1 `protobuf:"bytes,2,rep,name=appointments,proto3" json:"appointments,omitempty"`
}

func (x *GetAppointmentByClientIDResponseV1) Reset() {
	*x = GetAppointmentByClientIDResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppointmentByClientIDResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentByClientIDResponseV1) ProtoMessage() {}

func (x *GetAppointmentByClientIDResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentByClientIDResponseV1.ProtoReflect.Descriptor instead.
func (*GetAppointmentByClientIDResponseV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{1}
}

func (x *GetAppointmentByClientIDResponseV1) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetAppointmentByClientIDResponseV1) GetAppointments() []*AppointmentEntityV1 {
	if x != nil {
		return x.Appointments
	}
	return nil
}

type GetAppointmentByMasterIDRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterId int64 `protobuf:"varint,1,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	Limit    int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetAppointmentByMasterIDRequestV1) Reset() {
	*x = GetAppointmentByMasterIDRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppointmentByMasterIDRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentByMasterIDRequestV1) ProtoMessage() {}

func (x *GetAppointmentByMasterIDRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentByMasterIDRequestV1.ProtoReflect.Descriptor instead.
func (*GetAppointmentByMasterIDRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppointmentByMasterIDRequestV1) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *GetAppointmentByMasterIDRequestV1) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAppointmentByMasterIDRequestV1) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetAppointmentByMasterIDResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count        int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Appointments []*AppointmentEntityV1 `protobuf:"bytes,2,rep,name=appointments,proto3" json:"appointments,omitempty"`
}

func (x *GetAppointmentByMasterIDResponseV1) Reset() {
	*x = GetAppointmentByMasterIDResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppointmentByMasterIDResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentByMasterIDResponseV1) ProtoMessage() {}

func (x *GetAppointmentByMasterIDResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentByMasterIDResponseV1.ProtoReflect.Descriptor instead.
func (*GetAppointmentByMasterIDResponseV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{3}
}

func (x *GetAppointmentByMasterIDResponseV1) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetAppointmentByMasterIDResponseV1) GetAppointments() []*AppointmentEntityV1 {
	if x != nil {
		return x.Appointments
	}
	return nil
}

type ConfirmAppointmentRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId int64 `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *ConfirmAppointmentRequestV1) Reset() {
	*x = ConfirmAppointmentRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmAppointmentRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmAppointmentRequestV1) ProtoMessage() {}

func (x *ConfirmAppointmentRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmAppointmentRequestV1.ProtoReflect.Descriptor instead.
func (*ConfirmAppointmentRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{4}
}

func (x *ConfirmAppointmentRequestV1) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfirmAppointmentRequestV1) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type CancelAppointmentRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CancelReason  string `protobuf:"bytes,2,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	CancelledBy   string `protobuf:"bytes,3,opt,name=cancelled_by,json=cancelledBy,proto3" json:"cancelled_by,omitempty"`
	CancelledById int64  `protobuf:"varint,4,opt,name=cancelled_by_id,json=cancelledById,proto3" json:"cancelled_by_id,omitempty"`
	CancelledAt   string `protobuf:"bytes,5,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
}

func (x *CancelAppointmentRequestV1) Reset() {
	*x = CancelAppointmentRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAppointmentRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAppointmentRequestV1) ProtoMessage() {}

func (x *CancelAppointmentRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAppointmentRequestV1.ProtoReflect.Descriptor instead.
func (*CancelAppointmentRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{5}
}

func (x *CancelAppointmentRequestV1) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelAppointmentRequestV1) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

func (x *CancelAppointmentRequestV1) GetCancelledBy() string {
	if x != nil {
		return x.CancelledBy
	}
	return ""
}

func (x *CancelAppointmentRequestV1) GetCancelledById() int64 {
	if x != nil {
		return x.CancelledById
	}
	return 0
}

func (x *CancelAppointmentRequestV1) GetCancelledAt() string {
	if x != nil {
		return x.CancelledAt
	}
	return ""
}

type CreateAppointmentRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId      int64                   `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ServiceId     int64                   `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	StartTime     string                  `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                  `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Date          string                  `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	IsConfirmed   bool                    `protobuf:"varint,6,opt,name=is_confirmed,json=isConfirmed,proto3" json:"is_confirmed,omitempty"`
	CancelledAt   *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	CancelReason  *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	CancelledBy   *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=cancelled_by,json=cancelledBy,proto3" json:"cancelled_by,omitempty"`
	CancelledById *wrapperspb.Int64Value  `protobuf:"bytes,10,opt,name=cancelled_by_id,json=cancelledById,proto3" json:"cancelled_by_id,omitempty"`
	MasterId      int64                   `protobuf:"varint,11,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
}

func (x *CreateAppointmentRequestV1) Reset() {
	*x = CreateAppointmentRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppointmentRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppointmentRequestV1) ProtoMessage() {}

func (x *CreateAppointmentRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppointmentRequestV1.ProtoReflect.Descriptor instead.
func (*CreateAppointmentRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAppointmentRequestV1) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *CreateAppointmentRequestV1) GetServiceId() int64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *CreateAppointmentRequestV1) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateAppointmentRequestV1) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *CreateAppointmentRequestV1) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CreateAppointmentRequestV1) GetIsConfirmed() bool {
	if x != nil {
		return x.IsConfirmed
	}
	return false
}

func (x *CreateAppointmentRequestV1) GetCancelledAt() *wrapperspb.StringValue {
	if x != nil {
		return x.CancelledAt
	}
	return nil
}

func (x *CreateAppointmentRequestV1) GetCancelReason() *wrapperspb.StringValue {
	if x != nil {
		return x.CancelReason
	}
	return nil
}

func (x *CreateAppointmentRequestV1) GetCancelledBy() *wrapperspb.StringValue {
	if x != nil {
		return x.CancelledBy
	}
	return nil
}

func (x *CreateAppointmentRequestV1) GetCancelledById() *wrapperspb.Int64Value {
	if x != nil {
		return x.CancelledById
	}
	return nil
}

func (x *CreateAppointmentRequestV1) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

type AppointmentEntityV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId      int64  `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ServiceId     int64  `protobuf:"varint,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	StartTime     string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Date          string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	IsConfirmed   bool   `protobuf:"varint,7,opt,name=is_confirmed,json=isConfirmed,proto3" json:"is_confirmed,omitempty"`
	CancelledAt   string `protobuf:"bytes,8,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	CancelReason  string `protobuf:"bytes,9,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	CancelledBy   string `protobuf:"bytes,10,opt,name=cancelled_by,json=cancelledBy,proto3" json:"cancelled_by,omitempty"`
	CancelledById int64  `protobuf:"varint,11,opt,name=cancelled_by_id,json=cancelledById,proto3" json:"cancelled_by_id,omitempty"`
	MasterId      int64  `protobuf:"varint,12,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
}

func (x *AppointmentEntityV1) Reset() {
	*x = AppointmentEntityV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentEntityV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentEntityV1) ProtoMessage() {}

func (x *AppointmentEntityV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentEntityV1.ProtoReflect.Descriptor instead.
func (*AppointmentEntityV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{7}
}

func (x *AppointmentEntityV1) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppointmentEntityV1) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *AppointmentEntityV1) GetServiceId() int64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *AppointmentEntityV1) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AppointmentEntityV1) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AppointmentEntityV1) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AppointmentEntityV1) GetIsConfirmed() bool {
	if x != nil {
		return x.IsConfirmed
	}
	return false
}

func (x *AppointmentEntityV1) GetCancelledAt() string {
	if x != nil {
		return x.CancelledAt
	}
	return ""
}

func (x *AppointmentEntityV1) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

func (x *AppointmentEntityV1) GetCancelledBy() string {
	if x != nil {
		return x.CancelledBy
	}
	return ""
}

func (x *AppointmentEntityV1) GetCancelledById() int64 {
	if x != nil {
		return x.CancelledById
	}
	return 0
}

func (x *AppointmentEntityV1) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

type GetAvailableTimeByServiceIDAndDateRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId int64  `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Date      string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetAvailableTimeByServiceIDAndDateRequestV1) Reset() {
	*x = GetAvailableTimeByServiceIDAndDateRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTimeByServiceIDAndDateRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTimeByServiceIDAndDateRequestV1) ProtoMessage() {}

func (x *GetAvailableTimeByServiceIDAndDateRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTimeByServiceIDAndDateRequestV1.ProtoReflect.Descriptor instead.
func (*GetAvailableTimeByServiceIDAndDateRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{8}
}

func (x *GetAvailableTimeByServiceIDAndDateRequestV1) GetServiceId() int64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *GetAvailableTimeByServiceIDAndDateRequestV1) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type AvailableTimeEntityV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *AvailableTimeEntityV1) Reset() {
	*x = AvailableTimeEntityV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableTimeEntityV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableTimeEntityV1) ProtoMessage() {}

func (x *AvailableTimeEntityV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableTimeEntityV1.ProtoReflect.Descriptor instead.
func (*AvailableTimeEntityV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{9}
}

func (x *AvailableTimeEntityV1) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AvailableTimeEntityV1) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type GetAvailableTimeByServiceIDAndDateResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeArray []*AvailableTimeEntityV1 `protobuf:"bytes,1,rep,name=time_array,json=timeArray,proto3" json:"time_array,omitempty"`
}

func (x *GetAvailableTimeByServiceIDAndDateResponseV1) Reset() {
	*x = GetAvailableTimeByServiceIDAndDateResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTimeByServiceIDAndDateResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTimeByServiceIDAndDateResponseV1) ProtoMessage() {}

func (x *GetAvailableTimeByServiceIDAndDateResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTimeByServiceIDAndDateResponseV1.ProtoReflect.Descriptor instead.
func (*GetAvailableTimeByServiceIDAndDateResponseV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{10}
}

func (x *GetAvailableTimeByServiceIDAndDateResponseV1) GetTimeArray() []*AvailableTimeEntityV1 {
	if x != nil {
		return x.TimeArray
	}
	return nil
}

type WorkTimeEntityV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime string `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Date      string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	MasterId  int64  `protobuf:"varint,5,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
}

func (x *WorkTimeEntityV1) Reset() {
	*x = WorkTimeEntityV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkTimeEntityV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkTimeEntityV1) ProtoMessage() {}

func (x *WorkTimeEntityV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkTimeEntityV1.ProtoReflect.Descriptor instead.
func (*WorkTimeEntityV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{11}
}

func (x *WorkTimeEntityV1) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkTimeEntityV1) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WorkTimeEntityV1) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *WorkTimeEntityV1) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *WorkTimeEntityV1) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

type UpdateWorkTimeRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Date      string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	MasterId  int64  `protobuf:"varint,4,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
}

func (x *UpdateWorkTimeRequestV1) Reset() {
	*x = UpdateWorkTimeRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkTimeRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkTimeRequestV1) ProtoMessage() {}

func (x *UpdateWorkTimeRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkTimeRequestV1.ProtoReflect.Descriptor instead.
func (*UpdateWorkTimeRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateWorkTimeRequestV1) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpdateWorkTimeRequestV1) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *UpdateWorkTimeRequestV1) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *UpdateWorkTimeRequestV1) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

type DeleteWorkTimeRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	MasterId int64  `protobuf:"varint,2,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
}

func (x *DeleteWorkTimeRequestV1) Reset() {
	*x = DeleteWorkTimeRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkTimeRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkTimeRequestV1) ProtoMessage() {}

func (x *DeleteWorkTimeRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkTimeRequestV1.ProtoReflect.Descriptor instead.
func (*DeleteWorkTimeRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteWorkTimeRequestV1) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DeleteWorkTimeRequestV1) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

type GetWorkTimeByMasterIDRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterId int64 `protobuf:"varint,1,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	Limit    int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetWorkTimeByMasterIDRequestV1) Reset() {
	*x = GetWorkTimeByMasterIDRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkTimeByMasterIDRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkTimeByMasterIDRequestV1) ProtoMessage() {}

func (x *GetWorkTimeByMasterIDRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkTimeByMasterIDRequestV1.ProtoReflect.Descriptor instead.
func (*GetWorkTimeByMasterIDRequestV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{14}
}

func (x *GetWorkTimeByMasterIDRequestV1) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *GetWorkTimeByMasterIDRequestV1) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetWorkTimeByMasterIDRequestV1) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetWorkTimeByMasterIDResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int64               `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	WorkTimes []*WorkTimeEntityV1 `protobuf:"bytes,2,rep,name=work_times,json=workTimes,proto3" json:"work_times,omitempty"`
}

func (x *GetWorkTimeByMasterIDResponseV1) Reset() {
	*x = GetWorkTimeByMasterIDResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appointment_service_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkTimeByMasterIDResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkTimeByMasterIDResponseV1) ProtoMessage() {}

func (x *GetWorkTimeByMasterIDResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_service_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkTimeByMasterIDResponseV1.ProtoReflect.Descriptor instead.
func (*GetWorkTimeByMasterIDResponseV1) Descriptor() ([]byte, []int) {
	return file_appointment_service_v1_proto_rawDescGZIP(), []int{15}
}

func (x *GetWorkTimeByMasterIDResponseV1) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetWorkTimeByMasterIDResponseV1) GetWorkTimes() []*WorkTimeEntityV1 {
	if x != nil {
		return x.WorkTimes
	}
	return nil
}

var File_appointment_service_v1_proto protoreflect.FileDescriptor

var file_appointment_service_v1_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x31, 0x52, 0x0c, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x6e, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x31,
	0x52, 0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4a,
	0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x1a, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf0, 0x03, 0x0a,
	0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x12, 0x43, 0x0a,
	0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x82, 0x03, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x51, 0x0a, 0x15, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x31, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x2c, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56,
	0x31, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x8d, 0x01, 0x0a,
	0x10, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56,
	0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x6b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x75, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x31, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x32, 0xbc, 0x04, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x12, 0x60, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x31, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x31, 0x22, 0x00,
	0x12, 0x62, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31,
	0x1a, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x56, 0x31, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31,
	0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56,
	0x31, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x2e, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a,
	0x2f, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31,
	0x22, 0x00, 0x32, 0xb1, 0x01, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x12, 0x9b, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x38, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x39, 0x2e, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x56, 0x31, 0x22, 0x00, 0x32, 0xb4, 0x02, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x12, 0x74, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x42,
	0x79, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x31, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x31, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x2e,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x17, 0x5a,
	0x15, 0x2e, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_appointment_service_v1_proto_rawDescOnce sync.Once
	file_appointment_service_v1_proto_rawDescData = file_appointment_service_v1_proto_rawDesc
)

func file_appointment_service_v1_proto_rawDescGZIP() []byte {
	file_appointment_service_v1_proto_rawDescOnce.Do(func() {
		file_appointment_service_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_appointment_service_v1_proto_rawDescData)
	})
	return file_appointment_service_v1_proto_rawDescData
}

var file_appointment_service_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_appointment_service_v1_proto_goTypes = []interface{}{
	(*GetAppointmentByClientIDRequestV1)(nil),            // 0: appointment.GetAppointmentByClientIDRequestV1
	(*GetAppointmentByClientIDResponseV1)(nil),           // 1: appointment.GetAppointmentByClientIDResponseV1
	(*GetAppointmentByMasterIDRequestV1)(nil),            // 2: appointment.GetAppointmentByMasterIDRequestV1
	(*GetAppointmentByMasterIDResponseV1)(nil),           // 3: appointment.GetAppointmentByMasterIDResponseV1
	(*ConfirmAppointmentRequestV1)(nil),                  // 4: appointment.ConfirmAppointmentRequestV1
	(*CancelAppointmentRequestV1)(nil),                   // 5: appointment.CancelAppointmentRequestV1
	(*CreateAppointmentRequestV1)(nil),                   // 6: appointment.CreateAppointmentRequestV1
	(*AppointmentEntityV1)(nil),                          // 7: appointment.AppointmentEntityV1
	(*GetAvailableTimeByServiceIDAndDateRequestV1)(nil),  // 8: appointment.GetAvailableTimeByServiceIDAndDateRequestV1
	(*AvailableTimeEntityV1)(nil),                        // 9: appointment.AvailableTimeEntityV1
	(*GetAvailableTimeByServiceIDAndDateResponseV1)(nil), // 10: appointment.GetAvailableTimeByServiceIDAndDateResponseV1
	(*WorkTimeEntityV1)(nil),                             // 11: appointment.WorkTimeEntityV1
	(*UpdateWorkTimeRequestV1)(nil),                      // 12: appointment.UpdateWorkTimeRequestV1
	(*DeleteWorkTimeRequestV1)(nil),                      // 13: appointment.DeleteWorkTimeRequestV1
	(*GetWorkTimeByMasterIDRequestV1)(nil),               // 14: appointment.GetWorkTimeByMasterIDRequestV1
	(*GetWorkTimeByMasterIDResponseV1)(nil),              // 15: appointment.GetWorkTimeByMasterIDResponseV1
	(*wrapperspb.StringValue)(nil),                       // 16: google.protobuf.StringValue
	(*wrapperspb.Int64Value)(nil),                        // 17: google.protobuf.Int64Value
	(*emptypb.Empty)(nil),                                // 18: google.protobuf.Empty
}
var file_appointment_service_v1_proto_depIdxs = []int32{
	7,  // 0: appointment.GetAppointmentByClientIDResponseV1.appointments:type_name -> appointment.AppointmentEntityV1
	7,  // 1: appointment.GetAppointmentByMasterIDResponseV1.appointments:type_name -> appointment.AppointmentEntityV1
	16, // 2: appointment.CreateAppointmentRequestV1.cancelled_at:type_name -> google.protobuf.StringValue
	16, // 3: appointment.CreateAppointmentRequestV1.cancel_reason:type_name -> google.protobuf.StringValue
	16, // 4: appointment.CreateAppointmentRequestV1.cancelled_by:type_name -> google.protobuf.StringValue
	17, // 5: appointment.CreateAppointmentRequestV1.cancelled_by_id:type_name -> google.protobuf.Int64Value
	9,  // 6: appointment.GetAvailableTimeByServiceIDAndDateResponseV1.time_array:type_name -> appointment.AvailableTimeEntityV1
	11, // 7: appointment.GetWorkTimeByMasterIDResponseV1.work_times:type_name -> appointment.WorkTimeEntityV1
	6,  // 8: appointment.AppointmentServiceV1.CreateAppointment:input_type -> appointment.CreateAppointmentRequestV1
	5,  // 9: appointment.AppointmentServiceV1.CancelAppointment:input_type -> appointment.CancelAppointmentRequestV1
	4,  // 10: appointment.AppointmentServiceV1.ConfirmAppointment:input_type -> appointment.ConfirmAppointmentRequestV1
	2,  // 11: appointment.AppointmentServiceV1.GetAppointmentByMasterID:input_type -> appointment.GetAppointmentByMasterIDRequestV1
	0,  // 12: appointment.AppointmentServiceV1.GetAppointmentByClientID:input_type -> appointment.GetAppointmentByClientIDRequestV1
	8,  // 13: appointment.TimeCellServiceV1.GetAvailableTimeByServiceIDAndDate:input_type -> appointment.GetAvailableTimeByServiceIDAndDateRequestV1
	14, // 14: appointment.WorkTimeServiceV1.GetWorkTimeByMasterID:input_type -> appointment.GetWorkTimeByMasterIDRequestV1
	12, // 15: appointment.WorkTimeServiceV1.UpdateWorkTime:input_type -> appointment.UpdateWorkTimeRequestV1
	13, // 16: appointment.WorkTimeServiceV1.DeleteWorkTime:input_type -> appointment.DeleteWorkTimeRequestV1
	7,  // 17: appointment.AppointmentServiceV1.CreateAppointment:output_type -> appointment.AppointmentEntityV1
	7,  // 18: appointment.AppointmentServiceV1.CancelAppointment:output_type -> appointment.AppointmentEntityV1
	7,  // 19: appointment.AppointmentServiceV1.ConfirmAppointment:output_type -> appointment.AppointmentEntityV1
	3,  // 20: appointment.AppointmentServiceV1.GetAppointmentByMasterID:output_type -> appointment.GetAppointmentByMasterIDResponseV1
	1,  // 21: appointment.AppointmentServiceV1.GetAppointmentByClientID:output_type -> appointment.GetAppointmentByClientIDResponseV1
	10, // 22: appointment.TimeCellServiceV1.GetAvailableTimeByServiceIDAndDate:output_type -> appointment.GetAvailableTimeByServiceIDAndDateResponseV1
	15, // 23: appointment.WorkTimeServiceV1.GetWorkTimeByMasterID:output_type -> appointment.GetWorkTimeByMasterIDResponseV1
	11, // 24: appointment.WorkTimeServiceV1.UpdateWorkTime:output_type -> appointment.WorkTimeEntityV1
	18, // 25: appointment.WorkTimeServiceV1.DeleteWorkTime:output_type -> google.protobuf.Empty
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_appointment_service_v1_proto_init() }
func file_appointment_service_v1_proto_init() {
	if File_appointment_service_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_appointment_service_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppointmentByClientIDRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppointmentByClientIDResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppointmentByMasterIDRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppointmentByMasterIDResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmAppointmentRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAppointmentRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppointmentRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentEntityV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableTimeByServiceIDAndDateRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableTimeEntityV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableTimeByServiceIDAndDateResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkTimeEntityV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkTimeRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkTimeRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkTimeByMasterIDRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appointment_service_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkTimeByMasterIDResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_appointment_service_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_appointment_service_v1_proto_goTypes,
		DependencyIndexes: file_appointment_service_v1_proto_depIdxs,
		MessageInfos:      file_appointment_service_v1_proto_msgTypes,
	}.Build()
	File_appointment_service_v1_proto = out.File
	file_appointment_service_v1_proto_rawDesc = nil
	file_appointment_service_v1_proto_goTypes = nil
	file_appointment_service_v1_proto_depIdxs = nil
}
